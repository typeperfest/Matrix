#include <gtest/gtest.h>
#include "../lib/IntMatrix.h"
#include <vector>

typedef std::vector<std::vector<int>> vvecint;
using namespace matrix;

TEST(TEST01, FormatCheck) {
    vvecint v1{{1, 2, 3}, {1, 2}, {1, 2, 3}};
    vvecint v2{{1}, {1, 2}};
    vvecint v3{{}, {1}, {}};
    vvecint v4{{1, 2, 3, 4}, {1, 2, 3, 4}, {1}};
    EXPECT_THROW(IntMatrix mv1(v1), std::runtime_error);
    EXPECT_THROW(IntMatrix mv2(v2), std::runtime_error);
    EXPECT_THROW(IntMatrix mv3(v3), std::runtime_error);
    EXPECT_THROW(IntMatrix mv4(v4), std::runtime_error);

    EXPECT_THROW(IntMatrix m1({{1, 2, 3}, {1, 2}, {1, 2, 3}}), std::runtime_error);
    EXPECT_THROW(IntMatrix m2({{1}, {1, 2}}), std::runtime_error);
    EXPECT_THROW(IntMatrix m3({{}, {1}, {}}), std::runtime_error);
    EXPECT_THROW(IntMatrix m4({{1, 2, 3, 4}, {1, 2, 3, 4}, {1}}), std::runtime_error);
}

TEST(TEST02, BasicConstruction) {
    vvecint v1{{1, 2, 3}, {1, 2, 3}, {1, 2, 3}};
    vvecint v2{{1}, {1}, {1}, {1}, {1}};
    vvecint v3{{1, 2, 3, 4, 5, 6, 7}};
    EXPECT_NO_THROW(IntMatrix m1(v1));
    EXPECT_NO_THROW(IntMatrix m2(v2));
    EXPECT_NO_THROW(IntMatrix m3(v3));

    EXPECT_NO_THROW(IntMatrix m4({{1, 2, 3}, {1, 2, 3}, {1, 2, 3}}));
    EXPECT_NO_THROW(IntMatrix m4({{1}, {1}, {1}, {1}, {1}}));
    EXPECT_NO_THROW(IntMatrix m4({{1, 2, 3, 4, 5, 6, 7}}));

    IntMatrix mat0;
    IntMatrix mat1(v1);
    IntMatrix mat2(mat1);
    IntMatrix mat3(std::move(mat2));
    vvecint v4{{}};
    IntMatrix mat4(v3);

    IntMatrix numbersConstructed1(7, 7);
    IntMatrix zeros1({{0, 0, 0, 0, 0, 0, 0},
                      {0, 0, 0, 0, 0, 0, 0},
                      {0, 0, 0, 0, 0, 0, 0},
                      {0, 0, 0, 0, 0, 0, 0},
                      {0, 0, 0, 0, 0, 0, 0},
                      {0, 0, 0, 0, 0, 0, 0},
                      {0, 0, 0, 0, 0, 0, 0}});
    EXPECT_EQ(numbersConstructed1, zeros1);
    IntMatrix numbersConstructed2(1, 1);
    IntMatrix zeros2({{0}});
    EXPECT_EQ(numbersConstructed2, zeros2);
    IntMatrix numbersConstructed3(2, 4);
    IntMatrix zeros3({{0, 0, 0, 0}, {0, 0, 0, 0}});
    EXPECT_EQ(numbersConstructed3, zeros3);
    IntMatrix numbersConstructed4(4, 2);
    IntMatrix zeros4({{0, 0}, {0, 0}, {0, 0}, {0, 0}});
    EXPECT_EQ(numbersConstructed4, zeros4);
}

TEST(TEST03, BasicAssignation) {
    vvecint v1{{1, 2, 3}, {1, 2, 3}, {1, 2, 3}};
    IntMatrix m1(v1);
    IntMatrix m2;
    m2 = m1;
    EXPECT_EQ(m1, m2);
    IntMatrix v2{{1, 2, 3}, {1, 2, 3}};
    IntMatrix m3(v2);
    m3 = m2;
    EXPECT_EQ(m2, m3);
    IntMatrix m4;
    m4 = std::move(m3);
    EXPECT_EQ(m4, m2);
}

TEST(TEST04, CompatibilityChecking) {
    IntMatrix mat1({{1, 2, 3, 4, 5}});
    IntMatrix mat2({{1}, {2}, {3}, {4}, {5}});
    IntMatrix mat3({{1}});
    IntMatrix squaredMat1({{1, 2, 3}, {1, 2, 3}, {1, 2, 3}});
    IntMatrix squaredMat2({{1, 2, 3}, {1, 2, 3}, {1, 2, 3}});
    IntMatrix mat6({{1, 2, 3, 4, 5}});
    IntMatrix empMat({{}});

    EXPECT_TRUE(squaredMat1.isCompatible(squaredMat2, Operation::ADDITION));
    EXPECT_TRUE(squaredMat1.isCompatible(squaredMat2, Operation::SUBSTRACTION));
    EXPECT_TRUE(squaredMat1.isCompatible(squaredMat2, Operation::MULTIPLICATION));
    EXPECT_TRUE(squaredMat1.isCompatible(squaredMat2, Operation::COMPARISON));

    EXPECT_TRUE(mat1.isCompatible(mat2, Operation::MULTIPLICATION));
    EXPECT_TRUE(mat2.isCompatible(mat1, Operation::MULTIPLICATION));
    EXPECT_FALSE(mat1.isCompatible(mat2, Operation::ADDITION));
    EXPECT_FALSE(mat1.isCompatible(mat2, Operation::SUBSTRACTION));
    EXPECT_FALSE(mat1.isCompatible(mat2, Operation::COMPARISON));

    EXPECT_TRUE(mat1.isCompatible(mat6, Operation::ADDITION));
    EXPECT_TRUE(mat1.isCompatible(mat6, Operation::SUBSTRACTION));
    EXPECT_TRUE(mat1.isCompatible(mat6, Operation::COMPARISON));
    EXPECT_FALSE(mat1.isCompatible(mat6, Operation::MULTIPLICATION));

    EXPECT_FALSE(empMat.isCompatible(mat1, Operation::ADDITION));
    EXPECT_FALSE(empMat.isCompatible(mat1, Operation::MULTIPLICATION));
    EXPECT_FALSE(empMat.isCompatible(mat1, Operation::SUBSTRACTION));
    EXPECT_FALSE(empMat.isCompatible(mat1, Operation::COMPARISON));
}

TEST(TEST05, ArithmeticOperations) {
    vvecint v1{{1, 2, 3}, {1, 2, 3}, {1, 2, 3}};
    vvecint v2{{3, 2, 1}, {3, 2, 1}, {3, 2, 1}};
    vvecint vr{{4, 4, 4}, {4, 4, 4}, {4, 4, 4}};
    IntMatrix mat1(v1);
    IntMatrix mat2(v2);
    IntMatrix matr(vr);
    EXPECT_EQ(mat1 + mat2, matr);
    IntMatrix rectMat1({{1, 2, 3, 4}, {1, 2, 3, 4}, {1, 2, 3, 4}});
    IntMatrix rectMat2({{1, 2, 3, 4}, {2, 2, 3, 4}, {1, 2, 3, 4}});
    IntMatrix rectMat3({{2, 4, 6, 8}, {3, 4, 6, 8}, {2, 4, 6, 8}});
    EXPECT_EQ(rectMat1 + rectMat2, rectMat3);
    IntMatrix rowMat1({{7, 7, 7}});
    IntMatrix rowMat2({{3, 3, 3}});
    IntMatrix rowMat3({{4, 4, 4}});
    IntMatrix rowMat5 = rowMat1 - rowMat2; 
    EXPECT_EQ(rowMat5, rowMat3);
    IntMatrix rowMat4({{5, 5, 5}});
    IntMatrix colMat1({{4}, {4}, {4}});
    IntMatrix singleMat1({{60}});
    IntMatrix colMat2({{20, 20, 20}, {20, 20, 20}, {20, 20, 20}});
    IntMatrix mat4_4_1{{2, 5, 4, 1}, {1, 1, 3, -2}, {4, -5, 1, 4}, {5, 1, 5, 4}};
    IntMatrix mat4_4_2{{1, 2, 3, 1}, {4, -2, 3, -1}, {1, -3, 2, 4}, {1, 1, 1, 1}};
    IntMatrix mat4_4_r{{27, -17, 30, 14}, {6, -11, 10, 10}, {-11, 19, 3, 17}, {18, -3, 32, 28}};
    IntMatrix debugResult(mat4_4_1 * mat4_4_2);
    EXPECT_EQ(debugResult, mat4_4_r);
    EXPECT_EQ(rowMat4 * colMat1, singleMat1);
    EXPECT_EQ(colMat1 * rowMat4, colMat2);
}

TEST(TEST06, StressAddition) {
    // Generated test 1
    IntMatrix firstOp1{{-29767, -2758, 22558, 13299, 30223, -23890, -778, -22546, -3880, -7097, 17053, -25368, -25829, -27195, 27220}, {-32717, 14722, -9412, -1350, 22677, 2722, 20201, 15799, -6898, 2941, 29201, 19248, 7696, 1609, -4551}, {-10942, -14236, 7864, 15442, 23340, 10404, -15443, -22183, -25992, 14248, -19461, -19384, -15744, -2827, 12360}, {13632, 13608, 6152, -584, -14399, 8478, -17305, 23150, -7839, -4745, 25634, -29442, 16472, -2974, -14148}, {-1911, -19200, 22604, 18834, -9920, -31205, -3730, -2133, 17597, -3535, -21449, -11847, -12084, -12208, -31170}, {29384, -20760, 10291, 4474, -25876, -24736, 9019, -6621, -15280, -17813, 13933, 17927, -24675, -7393, -26765}, {-13446, -15312, 26413, -23475, -5556, -32752, 7287, -26062, -10970, -29576, -27613, 22985, -4524, 19618, -2722}, {-7320, 2401, 27177, 31819, -15838, 16458, -14613, -1915, -4309, 5391, -20957, 9473, 30592, 29321, 28563}, {2551, 27417, 4674, 12861, 23618, 10006, -27733, 11602, 125, 27468, 20614, -18522, -2304, 27776, -7883}, {17280, 21393, 12902, -18565, 13058, -3398, -12379, 21371, 32605, -29657, -8795, 27802, -1776, 18582, 7435}, {-21918, 9359, -1352, -7216, -82, 1319, 8706, -1466, -29222, 9788, -7050, 7583, 11533, 25424, 437}, {-5523, -32233, 19685, 151, 13649, 4465, 14397, 13946, -10294, -3534, -28390, 24422, 12642, -28623, -20299}, {-17670, -17132, 32007, 1061, -26906, 26996, 5962, 28138, 19640, 14527, 8633, 14573, 30952, -12856, -8360}, {11611, -25910, 8723, 23029, -27391, -9485, -4642, 7953, 15395, 12730, -18299, 32404, -23528, 4652, -20473}, {-1206, 12372, 15723, -31709, -31447, 12118, -27993, -29318, -19248, 11323, -8292, -29349, -9626, 26647, 15723}};
    IntMatrix secondOp1{{-27407, 3715, 19848, -19436, -1320, -5449, 24723, 20899, 7835, 21598, -7334, -27653, -12108, 10151, -31723}, {27588, -3109, 20704, -5518, 31420, -28293, -4161, -26607, 25361, -25543, -29951, -29742, 18929, 17550, -13622}, {-17465, -12637, 26282, 3559, -31226, -21801, -20151, 2399, -26784, -17328, 3076, -11333, -8604, -25658, -7201}, {26393, -15470, 14489, 21001, -26667, -17368, 12570, -17328, 18227, -16045, 17697, 8929, 8525, 19931, -25519}, {24222, -23691, -5242, 12397, -13544, 26629, 11392, 25407, -9437, -14804, -30251, 26640, -10589, 11300, -17622}, {16265, 18030, 16521, 5631, 13231, -2760, 25229, 13878, 19325, 29076, 1954, -21201, -21109, 19687, -17913}, {-8148, 5216, 31355, 14723, -8898, -32208, 18933, 8255, 14172, -4646, 31835, -17847, -4360, 32658, 13809}, {32224, -4415, -23785, -11546, -14474, 2627, -440, -24159, -2228, 14995, -18206, 19145, -5276, 29734, -5285}, {-13405, -13822, 10553, 3971, 8620, 10973, 4195, 31661, 13068, -26025, 23091, 1428, -27974, -30267, 25612}, {1420, -13124, 16467, 20948, -2325, 30669, -8490, -18219, -14889, -28725, 15165, -19152, 22563, 5828, 16478}, {27102, -20651, -25771, -25789, -12373, 13467, -10220, 1411, 25366, -22810, -7080, -24428, -4433, -21257, -9553}, {17268, -3370, -4661, 7945, -4477, 4922, 31336, -4877, -18932, 12536, 12060, 3981, -6155, 21084, 13754}, {-13483, -5341, -15330, 12224, -13394, 14252, 28369, 10524, -19643, -20414, 15240, 20277, 20972, -5145, 8805}, {-13935, -10500, 27363, 21866, 25444, -20045, -14508, -13114, 31910, -25722, 30417, 19054, 20236, -31652, 6994}, {-14883, 23527, 29031, -14835, 8306, 18290, -27075, -14379, -22622, 20143, 11906, 4175, -16214, 13807, 29031}};
    IntMatrix result1{{-57174, 957, 42406, -6137, 28903, -29339, 23945, -1647, 3955, 14501, 9719, -53021, -37937, -17044, -4503}, {-5129, 11613, 11292, -6868, 54097, -25571, 16040, -10808, 18463, -22602, -750, -10494, 26625, 19159, -18173}, {-28407, -26873, 34146, 19001, -7886, -11397, -35594, -19784, -52776, -3080, -16385, -30717, -24348, -28485, 5159}, {40025, -1862, 20641, 20417, -41066, -8890, -4735, 5822, 10388, -20790, 43331, -20513, 24997, 16957, -39667}, {22311, -42891, 17362, 31231, -23464, -4576, 7662, 23274, 8160, -18339, -51700, 14793, -22673, -908, -48792}, {45649, -2730, 26812, 10105, -12645, -27496, 34248, 7257, 4045, 11263, 15887, -3274, -45784, 12294, -44678}, {-21594, -10096, 57768, -8752, -14454, -64960, 26220, -17807, 3202, -34222, 4222, 5138, -8884, 52276, 11087}, {24904, -2014, 3392, 20273, -30312, 19085, -15053, -26074, -6537, 20386, -39163, 28618, 25316, 59055, 23278}, {-10854, 13595, 15227, 16832, 32238, 20979, -23538, 43263, 13193, 1443, 43705, -17094, -30278, -2491, 17729}, {18700, 8269, 29369, 2383, 10733, 27271, -20869, 3152, 17716, -58382, 6370, 8650, 20787, 24410, 23913}, {5184, -11292, -27123, -33005, -12455, 14786, -1514, -55, -3856, -13022, -14130, -16845, 7100, 4167, -9116}, {11745, -35603, 15024, 8096, 9172, 9387, 45733, 9069, -29226, 9002, -16330, 28403, 6487, -7539, -6545}, {-31153, -22473, 16677, 13285, -40300, 41248, 34331, 38662, -3, -5887, 23873, 34850, 51924, -18001, 445}, {-2324, -36410, 36086, 44895, -1947, -29530, -19150, -5161, 47305, -12992, 12118, 51458, -3292, -27000, -13479}, {-16089, 35899, 44754, -46544, -23141, 30408, -55068, -43697, -41870, 31466, 3614, -25174, -25840, 40454, 44754}};
    EXPECT_EQ(firstOp1 + secondOp1, result1);
    // Generated test 2
    IntMatrix firstOp2{{32382, -24560, 6124, 16134, 20026, -19882, -15619, 18261, 30050, -8390, 25749, -3189, 18267, 11997, 13092}, {-18037, 8464, 728, 3449, -20536, -17151, 8684, -21657, 10077, 5782, 2640, -20508, -1780, 7501, 31363}, {5829, -30406, -3955, 2477, 25421, -19590, -32693, -22717, 8402, 7951, -22502, -7456, -6020, -25325, -6644}, {-10355, 229, 12049, 30871, -26827, -19800, 16192, 32182, -32673, 5194, -17932, -3820, -18577, 13141, 26023}, {-17475, -24871, 4371, 9667, 4243, 16022, 16009, -13507, 13049, -2029, -22763, -21083, -16679, 5353, 7628}, {-27743, -10241, 25862, 6823, 19551, 16667, -6213, 17630, -13950, -13846, 9367, 12757, 6684, -9174, -2278}, {3482, -23912, -23502, -9390, -24214, 7946, -26000, -29483, -31253, 27783, 24062, -26823, 29097, 26917, -4276}, {11199, -25675, -26091, 1393, 11325, -18046, 26017, 9570, -5584, -11874, -20010, 21869, -13211, 26061, -4893}, {-2179, -24186, 9547, -9350, -1677, 5582, -30019, -6680, 25781, -14655, -14747, 4532, 4600, 15966, -25437}, {-4210, 28444, -32416, -11702, 20468, -20917, 10029, 11731, -22129, -21566, 5973, 21915, 30289, -7600, 2345}, {-22400, 11849, -6470, -9018, 9456, -25070, -17283, 13384, -1199, 15471, -11106, 16340, 11350, 5266, 21793}, {27650, -19674, 27072, -16057, 4359, -11505, -28636, -28746, -21204, 32292, 25948, -7040, 9702, -19055, -4733}, {30669, 10859, -20337, 3590, -14823, 8964, -18734, 17125, -25759, 15574, 24803, -27881, -5514, 8478, -10376}, {14655, -5329, -10947, -12540, 2246, -9554, -2452, -13450, 29977, -17690, 6558, -11304, 25898, 8410, 25371}, {-31878, -19606, -29225, -26304, -19333, 19070, -16205, 15074, 27487, -28912, 4930, -18387, 1881, -7681, -29225}};
    IntMatrix secondOp2{{-12101, 2268, -6434, 30481, -1898, 17289, 26880, -21993, 18545, -17953, 21299, -4539, 11790, -30003, 26782}, {-26710, -24276, -19843, 21605, 3193, 31044, 22946, -26066, 26238, 13850, -6955, -16474, -9198, 13977, -11980}, {1096, 22962, 29063, 18278, 17636, 18367, 941, 5998, -795, 18146, -27815, 17591, 3479, -13491, -5384}, {24616, 5907, 15815, 7079, 388, 32106, -11242, 15660, -16079, 7604, 1341, 25934, -29489, -7122, 18144}, {28958, -15727, 20470, 8963, 27449, -16016, 31450, 26750, -15930, -22081, -28860, 27411, 21531, 29671, -22912}, {10678, -14991, 24772, 28628, -21261, 20594, 2496, -20839, 30182, 23848, 7168, -32673, -15031, -4424, 1070}, {10246, -24802, 30490, -2339, 23322, -20344, -28193, -18608, 2159, -18153, 3879, 7309, -7285, -21153, 3294}, {12504, -4375, 21880, 25325, 24317, -30977, -1253, 21452, -26791, -3516, -29102, -21216, -1959, 15367, 9127}, {9052, -6481, 17585, 30544, -28424, 25673, 4082, -9351, 1308, 17931, -7734, 13775, -9164, -22509, -742}, {-7761, 31630, 24828, -4215, 31961, 15144, 22187, -4302, -3455, 4220, -2977, 9751, -31889, 1832, -19648}, {2876, -20639, 14236, -25036, -14975, -18880, -24197, 23708, 14415, -18945, -19776, -3263, 5884, -5488, -20264}, {19983, 21580, 8326, 3182, -29305, 24252, 21653, -16462, -7902, -10249, -13570, -2317, 27784, -25118, -10308}, {32749, -2268, -32682, 26222, 3434, -22783, -26498, -16985, -3929, 22474, -25367, -11517, 1710, 10962, 21476}, {-18540, 17698, 27588, 960, -21734, -10738, 16100, -24590, 1257, 12163, -6498, 22392, 2968, 29072, -15179}, {20075, -9506, -16158, -4933, -29499, -7436, 23252, -11888, -11979, -28451, 16681, 16500, -18774, -1071, -16158}};
    IntMatrix result2{{20281, -22292, -310, 46615, 18128, -2593, 11261, -3732, 48595, -26343, 47048, -7728, 30057, -18006, 39874}, {-44747, -15812, -19115, 25054, -17343, 13893, 31630, -47723, 36315, 19632, -4315, -36982, -10978, 21478, 19383}, {6925, -7444, 25108, 20755, 43057, -1223, -31752, -16719, 7607, 26097, -50317, 10135, -2541, -38816, -12028}, {14261, 6136, 27864, 37950, -26439, 12306, 4950, 47842, -48752, 12798, -16591, 22114, -48066, 6019, 44167}, {11483, -40598, 24841, 18630, 31692, 6, 47459, 13243, -2881, -24110, -51623, 6328, 4852, 35024, -15284}, {-17065, -25232, 50634, 35451, -1710, 37261, -3717, -3209, 16232, 10002, 16535, -19916, -8347, -13598, -1208}, {13728, -48714, 6988, -11729, -892, -12398, -54193, -48091, -29094, 9630, 27941, -19514, 21812, 5764, -982}, {23703, -30050, -4211, 26718, 35642, -49023, 24764, 31022, -32375, -15390, -49112, 653, -15170, 41428, 4234}, {6873, -30667, 27132, 21194, -30101, 31255, -25937, -16031, 27089, 3276, -22481, 18307, -4564, -6543, -26179}, {-11971, 60074, -7588, -15917, 52429, -5773, 32216, 7429, -25584, -17346, 2996, 31666, -1600, -5768, -17303}, {-19524, -8790, 7766, -34054, -5519, -43950, -41480, 37092, 13216, -3474, -30882, 13077, 17234, -222, 1529}, {47633, 1906, 35398, -12875, -24946, 12747, -6983, -45208, -29106, 22043, 12378, -9357, 37486, -44173, -15041}, {63418, 8591, -53019, 29812, -11389, -13819, -45232, 140, -29688, 38048, -564, -39398, -3804, 19440, 11100}, {-3885, 12369, 16641, -11580, -19488, -20292, 13648, -38040, 31234, -5527, 60, 11088, 28866, 37482, 10192}, {-11803, -29112, -45383, -31237, -48832, 11634, 7047, 3186, 15508, -57363, 21611, -1887, -16893, -8752, -45383}};
    EXPECT_EQ(firstOp2 + secondOp2, result2);
    // Generated test 3
    IntMatrix firstOp3{{-18220, -4776, 29547, -5249, -16116, -28434, -16894, 1478, 26225, -27575, -1475, -17267, -24293, -7796, 23069}, {-2150, 12239, 12502, -13200, 9129, -4025, -2788, 32465, 18465, 5636, -31769, -24136, -16452, -16526, -23439}, {16536, -3558, -18848, -16093, -8921, -9673, 18063, -3383, -9027, 8084, 3529, 10624, 16632, -9131, 10035}, {-10393, 14712, 18611, -2103, -32732, -29683, -20527, 30713, 27133, -30538, 20802, -17948, 11003, 14716, 24235}, {-21167, -22107, -10007, -9403, 6415, -5997, 31274, -19322, 5865, -8320, -15602, 26408, 8813, 17296, 26736}, {-18816, -27361, 23112, 14954, -4974, -6860, 21925, 20721, 14911, 15189, 9815, 1233, -12398, 28905, -30281}, {16972, 6901, 20489, 1079, 25387, -6089, -22302, -28480, -7585, 15528, -27064, -9068, -15167, -4393, -73}, {18276, -5226, 22776, 27043, 9449, -17551, -8098, 26784, 7451, 1271, -10347, -15285, 10900, 30062, 9066}, {9092, -690, 27253, -23207, -20071, -14907, 26075, -15408, 21755, 2851, -15808, 1579, -9486, 6376, 18331}, {4467, 23703, 32196, -8614, 15538, -7058, 17365, -29227, -20226, 1653, 23839, -21693, 15588, -8207, -19278}, {-18973, 19587, -3670, -10464, 19016, 9610, -28095, -18857, 17619, -17310, -261, -23429, 4971, 6610, 20088}, {29007, 1110, 17245, 8748, -13794, 12021, -18283, 27259, 14929, -14708, -23549, 10795, 5079, -14996, 2927}, {-32428, -2680, 29160, 28391, 15172, -16462, 13328, 1346, 21884, -11053, -11157, -30453, 2244, -25671, 14471}, {-31738, 28118, -28433, 17954, -12190, -1840, -4066, 18521, 20834, -27898, -24635, 3745, 17652, -29102, 22020}, {-22803, 17006, 27294, 23495, -21642, -26321, -22313, 9045, -25038, -31165, -13042, -8020, -10609, -10373, 27294}};
    IntMatrix secondOp3{{-29343, 20615, 28202, 16977, -12814, 27885, -5026, -30287, 22393, -9753, -31925, 30705, 1220, -22756, 22879}, {-4641, -1579, 3356, -7378, -18993, -13890, 29120, 16577, 31598, -27318, -28518, 10367, -24384, 11064, 31494}, {-15867, -11582, -21272, -20252, 32509, -26553, 17232, -17909, 8679, 5133, 4329, 14779, 29110, 3125, -20342}, {-18150, -26691, 6613, 17070, -4980, -4713, -9580, 5194, 20481, -10414, -31818, -1157, -28546, 15457, -6856}, {-28877, 10788, -28082, 25032, -30673, 7858, -23758, 6315, -21496, -23873, -18709, 11890, -31922, 14100, 7801}, {30820, -13344, 1770, 18761, -24183, 7620, 2258, 3386, -27060, -12478, 22039, -10207, -4516, 28392, -1725}, {13486, 17572, -11874, -6424, -14443, -19526, 18890, 24145, 21118, -25679, -7722, 1749, -20206, -7742, 16298}, {-2117, -12164, 11558, 7662, 31934, -17923, -13270, -1825, -5453, -32625, -32638, -12261, -25929, 32746, 5767}, {5248, 23934, 13773, 158, 3655, 28931, 14368, 20215, 27238, 23269, -9661, -20161, -4704, -16069, 7847}, {32439, 14011, -6812, -3667, 7400, -20886, -24988, -8554, 22700, 23693, 11173, 26751, 25803, -4925, 7978}, {-31205, 31582, -20483, -8119, 15685, 1804, 2509, 32686, -17266, -7030, 26204, -30473, -13719, 11099, -11760}, {-5643, 20445, 16774, -21880, -14978, 18726, 13088, 6829, 13794, 5161, -790, -26306, -24821, -23173, -11658}, {-8902, 17454, -21628, -26434, 13177, -15252, -4413, -2568, 16769, 6636, 12081, -21596, -1455, 22716, 15302}, {10050, 25904, 20367, 15630, 32461, -20105, 4108, -4818, -921, 2360, 15081, -31032, -15482, 2281, -18207}, {22467, -24095, 8877, -12267, -25393, -25854, 543, 17757, -5571, 31883, 26935, 2153, -13942, -17707, 8877}};
    IntMatrix result3{{-47563, 15839, 57749, 11728, -28930, -549, -21920, -28809, 48618, -37328, -33400, 13438, -23073, -30552, 45948}, {-6791, 10660, 15858, -20578, -9864, -17915, 26332, 49042, 50063, -21682, -60287, -13769, -40836, -5462, 8055}, {669, -15140, -40120, -36345, 23588, -36226, 35295, -21292, -348, 13217, 7858, 25403, 45742, -6006, -10307}, {-28543, -11979, 25224, 14967, -37712, -34396, -30107, 35907, 47614, -40952, -11016, -19105, -17543, 30173, 17379}, {-50044, -11319, -38089, 15629, -24258, 1861, 7516, -13007, -15631, -32193, -34311, 38298, -23109, 31396, 34537}, {12004, -40705, 24882, 33715, -29157, 760, 24183, 24107, -12149, 2711, 31854, -8974, -16914, 57297, -32006}, {30458, 24473, 8615, -5345, 10944, -25615, -3412, -4335, 13533, -10151, -34786, -7319, -35373, -12135, 16225}, {16159, -17390, 34334, 34705, 41383, -35474, -21368, 24959, 1998, -31354, -42985, -27546, -15029, 62808, 14833}, {14340, 23244, 41026, -23049, -16416, 14024, 40443, 4807, 48993, 26120, -25469, -18582, -14190, -9693, 26178}, {36906, 37714, 25384, -12281, 22938, -27944, -7623, -37781, 2474, 25346, 35012, 5058, 41391, -13132, -11300}, {-50178, 51169, -24153, -18583, 34701, 11414, -25586, 13829, 353, -24340, 25943, -53902, -8748, 17709, 8328}, {23364, 21555, 34019, -13132, -28772, 30747, -5195, 34088, 28723, -9547, -24339, -15511, -19742, -38169, -8731}, {-41330, 14774, 7532, 1957, 28349, -31714, 8915, -1222, 38653, -4417, 924, -52049, 789, -2955, 29773}, {-21688, 54022, -8066, 33584, 20271, -21945, 42, 13703, 19913, -25538, -9554, -27287, 2170, -26821, 3813}, {-336, -7089, 36171, 11228, -47035, -52175, -21770, 26802, -30609, 718, 13893, -5867, -24551, -28080, 36171}};
    EXPECT_EQ(firstOp3 + secondOp3, result3);
    // Generated test 4
    IntMatrix firstOp4{{25676, -4304, 30944, 14443, -3957, -21085, -17153, -9119, 26501, -18117, 12018, -4040, -12541, -16403, 5861}, {3563, -15051, 10767, 24102, 24750, 31561, -29846, -3530, 14674, -2668, -6154, 2683, 6346, 27993, -28628}, {10943, -24683, -22944, 15925, -9733, 26114, -28217, -18847, 17702, -25015, 7065, -22333, -31748, 28530, -14882}, {-13084, -5025, 12407, 19229, 24565, -4446, 4448, 18211, 28929, 21349, 31313, -9195, 23722, 20752, -25979}, {-23514, -14208, -16390, 15892, -17991, -13494, -14644, 29402, -3166, -6951, -17057, 17345, -17030, 4624, 8830}, {714, -30355, -18468, -11913, -6365, 3127, 2305, -20409, -7495, 4846, 29761, -8808, -20733, -4090, -10841}, {-19927, 16410, -23782, -14324, -28991, 27205, -216, -19620, 11721, 6577, -5347, 25443, -28726, -22477, 6683}, {-14169, -19759, -44, -29845, -29083, 9392, 26860, -11992, 15971, 26176, 887, -20992, -28839, 20382, -13712}, {16692, -23351, 15819, 17745, -4959, -7556, 17128, 13320, 8831, -19255, -16047, 21862, -12271, -14600, 8002}, {-22949, -31304, -12794, -16487, -27377, 12554, 30312, 7624, 23146, 24552, -14464, 22848, 5579, 22916, 25733}, {-20158, 28864, 21954, 26510, -25613, 19682, 2278, 31142, -24923, -18572, -7807, -1946, 13555, -399, 14007}, {139, -25547, 26558, 29866, 9653, 25941, 31911, 6822, 30124, -27772, 7191, -32208, -24075, -4893, -1077}, {25634, 21338, 27772, 12267, 2801, 10711, 26538, 21876, 29692, 17972, 28476, 9620, -4289, 29309, 16798}, {17452, 9323, 1070, -14815, -19259, 26908, -23728, -27274, -3249, -3618, -23670, 11039, 14367, 9693, -25047}, {-8743, -21010, -32158, -4293, 27472, 9254, 19134, 6843, -32097, 8938, 10523, -14783, -28215, -24184, -32158}};
    IntMatrix secondOp4{{-24372, -13251, -8604, -28039, -28240, 23395, 26890, 15005, -7773, 26748, 28310, -31299, -591, 17069, 6658}, {29155, 24947, 32739, 23752, -30535, 26821, 20125, 27398, -4553, 9849, 27617, 20660, -13499, 32484, 23283}, {-221, 15450, -19374, -14338, 17617, -5581, -31820, -6760, 12389, 8715, 3441, -17580, -30200, 10055, 8110}, {-3420, 23158, -16166, -18541, -3485, 3962, 7359, 11510, 7668, -13341, -32616, -3695, -21754, 17156, -13704}, {-23723, -478, -17818, 29665, 31574, -25099, 1059, -32165, -2243, -28473, -716, -27008, 18446, 363, 20467}, {27538, 19144, 30030, 18484, -4482, 7767, -5634, -18060, 30815, 14765, 11441, 1832, -8238, -27766, -16582}, {5472, 10567, 15000, 31520, -17202, -12882, -22476, 2840, -24226, -16579, -29998, 26491, 13821, -32654, -11195}, {6826, -29679, 15200, 11211, 23203, -30362, -1858, -26847, 29022, 26344, -3731, -26001, -9493, -29220, 26969}, {-17589, -15305, -6397, 14054, -19100, -9491, 12717, 9454, 23246, -18183, -16978, 30284, -15959, 29960, 22046}, {-8520, -16164, 20422, -22618, 28150, 18931, -13610, -22345, 18267, 18393, -20891, 13113, 10068, 4684, -30689}, {-7861, 7202, 30424, -10060, -27359, 6820, -14135, -29495, 17868, -14460, 18825, -2542, 16550, -31409, -78}, {11856, 8260, -21526, 24713, 23016, -8697, -20526, -4, -29583, 4904, -1470, 1391, -21208, 3949, -31212}, {15291, 9323, 2372, 23494, -3492, -22114, -16169, -26352, -2537, -27276, 7023, 26140, 399, -18532, -22824}, {11327, -11068, 7008, -12362, -24240, 1030, -4281, -6632, 16881, -25239, -2516, -26547, 27887, 27070, -498}, {-26952, 18408, 5346, -29057, -11047, -13386, 7019, 12522, 2473, -5533, -30563, -678, 17545, 1565, 5346}};
    IntMatrix result4{{1304, -17555, 22340, -13596, -32197, 2310, 9737, 5886, 18728, 8631, 40328, -35339, -13132, 666, 12519}, {32718, 9896, 43506, 47854, -5785, 58382, -9721, 23868, 10121, 7181, 21463, 23343, -7153, 60477, -5345}, {10722, -9233, -42318, 1587, 7884, 20533, -60037, -25607, 30091, -16300, 10506, -39913, -61948, 38585, -6772}, {-16504, 18133, -3759, 688, 21080, -484, 11807, 29721, 36597, 8008, -1303, -12890, 1968, 37908, -39683}, {-47237, -14686, -34208, 45557, 13583, -38593, -13585, -2763, -5409, -35424, -17773, -9663, 1416, 4987, 29297}, {28252, -11211, 11562, 6571, -10847, 10894, -3329, -38469, 23320, 19611, 41202, -6976, -28971, -31856, -27423}, {-14455, 26977, -8782, 17196, -46193, 14323, -22692, -16780, -12505, -10002, -35345, 51934, -14905, -55131, -4512}, {-7343, -49438, 15156, -18634, -5880, -20970, 25002, -38839, 44993, 52520, -2844, -46993, -38332, -8838, 13257}, {-897, -38656, 9422, 31799, -24059, -17047, 29845, 22774, 32077, -37438, -33025, 52146, -28230, 15360, 30048}, {-31469, -47468, 7628, -39105, 773, 31485, 16702, -14721, 41413, 42945, -35355, 35961, 15647, 27600, -4956}, {-28019, 36066, 52378, 16450, -52972, 26502, -11857, 1647, -7055, -33032, 11018, -4488, 30105, -31808, 13929}, {11995, -17287, 5032, 54579, 32669, 17244, 11385, 6818, 541, -22868, 5721, -30817, -45283, -944, -32289}, {40925, 30661, 30144, 35761, -691, -11403, 10369, -4476, 27155, -9304, 35499, 35760, -3890, 10777, -6026}, {28779, -1745, 8078, -27177, -43499, 27938, -28009, -33906, 13632, -28857, -26186, -15508, 42254, 36763, -25545}, {-35695, -2602, -26812, -33350, 16425, -4132, 26153, 19365, -29624, 3405, -20040, -15461, -10670, -22619, -26812}};
    EXPECT_EQ(firstOp4 + secondOp4, result4);
    // Generated test 5
    IntMatrix firstOp5{{5517, -15527, -6541, -30076, 8072, 16682, 25515, 2491, -30811, 30965, -24656, 13554, -6635, -28053, 438}, {-32529, 23530, -22539, 9467, 27250, 10773, -21168, 13325, -6255, 22726, 24903, -5201, -19506, -11923, 22323}, {6677, -21451, 14240, -1448, -5079, -29861, 10258, 7218, -3110, -14221, 22246, 27587, -3914, 18933, 6880}, {-12921, -12890, -23488, 19424, -348, 12757, -29352, -24273, -6562, 14683, -13137, -31999, -3430, 31126, -230}, {12743, -2836, -31560, -4705, -32667, -22309, 20008, -26181, -5089, 868, -19880, 32339, 14532, 12940, -15067}, {-22617, 5617, -8862, -2688, 20350, -15252, -26448, 7295, -12584, -2941, 16791, -25316, 5969, 18145, 12111}, {23720, 17784, -3361, -21154, -6332, -15478, -27988, 22272, -21668, -9443, -14967, 16462, 1751, -25559, -25987}, {26950, -12908, -19763, -32352, -20118, -31837, -14092, -9017, -30767, -18985, 27446, 15360, 16419, 20274, 19124}, {19333, 24392, 348, -18964, 22491, -12325, -17641, 15735, 1415, 32307, 20850, 5363, -5304, -15774, 8721}, {-29624, 29163, -28952, 18493, 16320, -11383, -14798, -18102, -3806, -5774, -16528, -10395, -28114, -7696, 6500}, {216, -30549, 27875, 22734, -9776, -1800, -26865, -26567, 2625, -4576, -2851, 9454, 25415, -1818, -22218}, {26011, -18334, 27370, -12336, 27773, -3368, 2744, -273, -15064, -16504, -17564, 32147, 18830, 1945, 6348}, {-6527, -22847, 11656, -23277, -4601, 2629, -31378, 5249, -28376, 8637, 17023, -20483, -17592, 10222, -2991}, {-21385, -3407, 29873, 19186, 31800, -11810, -21944, -24690, -13872, -22702, -9855, -8141, 5427, -12146, -25947}, {-12620, 2267, 8157, -24073, -30772, -31010, 23522, 7220, 20540, -24995, 5840, 2742, 15010, -9725, 8157}};
    IntMatrix secondOp5{{-4631, 7974, -10752, 10480, -18917, -29145, 12820, -20024, -3324, -10407, -4077, 25361, 26387, 15545, 2151}, {12114, -2323, -17452, 26950, 22963, 17399, 12404, 3159, 9303, -18766, 19626, 19324, -19858, 21372, 10124}, {-7481, -9388, 15799, 16169, 21246, -20226, -6058, -4268, -20097, 30061, 25318, 32350, -31393, -16178, -15425}, {22600, -13101, 28820, -15796, -4518, -28672, -15927, -1554, 5942, 24042, 12692, 4492, 14692, -21201, -4207}, {26276, -12432, 26890, -12479, -12488, -14482, 10171, -22839, -2109, 6462, -29106, 19489, 19570, 24944, 2426}, {-31699, -5038, -32233, -32377, -26339, -623, -10018, 14649, 8396, -9150, 5348, 1027, 24652, 15838, -5002}, {28201, 27943, 7494, -17732, 15827, 7095, -6004, -10839, 3185, 24304, 8378, -4939, 157, -17378, 539}, {-1224, -14272, -23982, -18138, -23561, -15123, 21900, 16038, -9479, 4597, -4963, -30554, 3159, -2167, -5467}, {15045, 9363, -919, 3756, 11377, -10900, -26345, 5166, 7152, 5392, 31305, 16269, -19043, -29247, -11226}, {-26370, -21906, 9325, 15149, -24921, 19155, 17295, -23947, -4997, 17051, -15104, 26283, -26032, -1164, 14428}, {6731, -13611, 26382, 31354, 11238, 21256, 23429, 762, -23149, -18470, -23664, -18663, -5515, 21397, 14035}, {-29063, 18847, 31083, 17, 26669, -6287, 14779, -25337, -1855, 21258, 15481, -20724, -14116, -10444, -2781}, {4336, -23426, 18019, 31837, -17650, -3477, 16656, 25185, 19464, 2412, 1919, -7007, 1685, 3762, -26842}, {-28894, -30577, -23033, -25382, 24651, -11118, 23090, -22423, 7951, -8974, -14584, 32664, 29477, 21491, 30445}, {19974, -9931, 31195, 13529, -20019, -25163, -1689, -8787, -332, -21729, -14585, 27485, 25131, 14839, 31195}};
    IntMatrix result5{{886, -7553, -17293, -19596, -10845, -12463, 38335, -17533, -34135, 20558, -28733, 38915, 19752, -12508, 2589}, {-20415, 21207, -39991, 36417, 50213, 28172, -8764, 16484, 3048, 3960, 44529, 14123, -39364, 9449, 32447}, {-804, -30839, 30039, 14721, 16167, -50087, 4200, 2950, -23207, 15840, 47564, 59937, -35307, 2755, -8545}, {9679, -25991, 5332, 3628, -4866, -15915, -45279, -25827, -620, 38725, -445, -27507, 11262, 9925, -4437}, {39019, -15268, -4670, -17184, -45155, -36791, 30179, -49020, -7198, 7330, -48986, 51828, 34102, 37884, -12641}, {-54316, 579, -41095, -35065, -5989, -15875, -36466, 21944, -4188, -12091, 22139, -24289, 30621, 33983, 7109}, {51921, 45727, 4133, -38886, 9495, -8383, -33992, 11433, -18483, 14861, -6589, 11523, 1908, -42937, -25448}, {25726, -27180, -43745, -50490, -43679, -46960, 7808, 7021, -40246, -14388, 22483, -15194, 19578, 18107, 13657}, {34378, 33755, -571, -15208, 33868, -23225, -43986, 20901, 8567, 37699, 52155, 21632, -24347, -45021, -2505}, {-55994, 7257, -19627, 33642, -8601, 7772, 2497, -42049, -8803, 11277, -31632, 15888, -54146, -8860, 20928}, {6947, -44160, 54257, 54088, 1462, 19456, -3436, -25805, -20524, -23046, -26515, -9209, 19900, 19579, -8183}, {-3052, 513, 58453, -12319, 54442, -9655, 17523, -25610, -16919, 4754, -2083, 11423, 4714, -8499, 3567}, {-2191, -46273, 29675, 8560, -22251, -848, -14722, 30434, -8912, 11049, 18942, -27490, -15907, 13984, -29833}, {-50279, -33984, 6840, -6196, 56451, -22928, 1146, -47113, -5921, -31676, -24439, 24523, 34904, 9345, 4498}, {7354, -7664, 39352, -10544, -50791, -56173, 21833, -1567, 20208, -46724, -8745, 30227, 40141, 5114, 39352}};
    EXPECT_EQ(firstOp5 + secondOp5, result5);
    // Generation done by ./generateTestcases.py
}

TEST(TEST07, StressSubstraction) {
    // Generated test 1
    IntMatrix firstOp1{{-6416, -25694, 10328, -16368, -2360, -392, 15832, 11093, 4242, -30459, 30258, 3698, 11416, -32039, 29206}, {1894, -29792, 11397, -15058, 1925, -662, -16688, 4829, -28562, -27657, 23846, 8656, -1802, 8707, 32626}, {-22848, 31691, -26655, 11526, 26479, 23584, 767, -32235, -9928, 19031, -24684, -5077, 26779, 28322, -14115}, {32033, -22145, 30548, -16854, 20527, -28396, -10073, 5596, -19221, -9789, -17232, 26814, -29796, -28385, -5448}, {-20031, 11591, 4623, 18916, 9345, -18841, 16153, 11645, -21631, -32018, -7153, -24256, 21621, 6235, 17219}, {11664, 23553, -2, 6908, 22677, 22494, 2978, 8640, -22483, 10968, 96, 29644, 6447, 26986, 6275}, {-17873, 18346, -24718, 8860, -14756, 18357, -5638, 15508, 7926, 14936, 26711, -7192, -7853, -26946, 9093}, {11779, 23916, 4479, -19244, 17560, -1171, -18912, -23601, -2292, -5515, 10272, -23866, -26944, 11118, 12947}, {-8736, -27559, -8737, 18833, -5902, 26254, 23144, -30728, -29292, 8764, -24445, -14285, 30665, 22401, -1617}, {-3781, -202, -16345, -18266, -10959, 25175, -29989, -4182, -5715, 30457, 26433, 23860, 30285, 30096, 9935}, {-24456, -4172, 3758, 15264, -10160, 7582, -11769, 8153, 4863, 8947, 7757, -11614, -18987, 29284, -27779}, {15485, -24517, -16334, -32536, -7243, 8041, 10457, -11754, 30497, 20735, -24047, 26866, 13281, -1633, -26780}, {22631, -5080, -23134, 4438, -13488, -7235, 1866, -23766, 30724, 28683, 17469, 30784, -17740, -27828, -3592}, {-27057, 21613, -3447, -3511, 17434, 3147, 18965, -8922, -8895, -30542, -6027, -32000, 3564, 6180, -331}, {-8999, -28635, -25490, 16120, -15282, 3521, -27859, -8444, -1394, 26235, -20616, -25154, -12049, -6697, -25490}};
    IntMatrix secondOp1{{-27521, 29686, 887, -12717, 7782, -29346, 9738, -24398, -6636, -23333, -16270, -5162, 11958, -13523, -28438}, {-16156, -17182, -9479, -22214, 3794, -3157, -29330, -5934, -8237, -27168, 7608, 27913, 16123, -29703, -126}, {9816, 8888, 18090, -15938, -3867, 11475, 8098, 15720, -22180, -27375, -16023, -24429, 27562, -30173, -32553}, {29201, 11951, 7916, -3676, -24968, -4103, -9517, 20388, 4135, -23854, -11895, -18662, 3537, 22265, -15797}, {1006, 2607, -9094, -26123, 7534, 48, 24214, 7851, 21068, 31761, 18278, -2992, -3461, -13354, 20143}, {25417, -5599, -23033, -578, -21279, -3898, 7724, -3233, 15947, -23671, -19908, 20119, 986, -29179, 2676}, {13375, 21106, 1472, 17804, -2469, 12615, 30765, -19144, 9992, -1100, -23927, 9326, -21785, 12386, -26260}, {-30149, 24720, -24351, -28446, -21219, -29803, -26798, 13028, -12762, -25462, -3671, -19933, -24234, -10896, 9348}, {-14728, -2853, 27940, -2453, -16301, -16229, 27517, -7890, 425, 6630, 4174, 19426, -2839, -6508, -5176}, {-20320, 5031, -29128, 1038, 23934, 15892, 10176, 18618, -10790, -18214, -1346, 5584, 22147, 10488, 32452}, {31557, 1429, -18888, 17642, -5699, 32432, -16089, 28343, -32600, 26913, -28538, -18518, 6625, -23556, 19568}, {-4847, 22430, 32404, -16517, -25302, -31826, 13326, -29931, -20947, -27936, 11695, 5362, 12490, 24598, 27882}, {17252, -8010, 5479, -8758, -21364, -16778, 21210, -18754, 3669, -22809, -16163, 13411, 31448, 16591, 21603}, {22476, 16073, -11344, -18568, -31492, -27356, -818, 23027, -15715, -21028, -32058, -9596, 22411, -13944, -25549}, {-30755, 25730, -22135, -14453, -14171, 25486, -18388, 22745, -23558, 6638, -1382, -31552, -6510, 21642, -22135}};
    IntMatrix result1{{21105, -55380, 9441, -3651, -10142, 28954, 6094, 35491, 10878, -7126, 46528, 8860, -542, -18516, 57644}, {18050, -12610, 20876, 7156, -1869, 2495, 12642, 10763, -20325, -489, 16238, -19257, -17925, 38410, 32752}, {-32664, 22803, -44745, 27464, 30346, 12109, -7331, -47955, 12252, 46406, -8661, 19352, -783, 58495, 18438}, {2832, -34096, 22632, -13178, 45495, -24293, -556, -14792, -23356, 14065, -5337, 45476, -33333, -50650, 10349}, {-21037, 8984, 13717, 45039, 1811, -18889, -8061, 3794, -42699, -63779, -25431, -21264, 25082, 19589, -2924}, {-13753, 29152, 23031, 7486, 43956, 26392, -4746, 11873, -38430, 34639, 20004, 9525, 5461, 56165, 3599}, {-31248, -2760, -26190, -8944, -12287, 5742, -36403, 34652, -2066, 16036, 50638, -16518, 13932, -39332, 35353}, {41928, -804, 28830, 9202, 38779, 28632, 7886, -36629, 10470, 19947, 13943, -3933, -2710, 22014, 3599}, {5992, -24706, -36677, 21286, 10399, 42483, -4373, -22838, -29717, 2134, -28619, -33711, 33504, 28909, 3559}, {16539, -5233, 12783, -19304, -34893, 9283, -40165, -22800, 5075, 48671, 27779, 18276, 8138, 19608, -22517}, {-56013, -5601, 22646, -2378, -4461, -24850, 4320, -20190, 37463, -17966, 36295, 6904, -25612, 52840, -47347}, {20332, -46947, -48738, -16019, 18059, 39867, -2869, 18177, 51444, 48671, -35742, 21504, 791, -26231, -54662}, {5379, 2930, -28613, 13196, 7876, 9543, -19344, -5012, 27055, 51492, 33632, 17373, -49188, -44419, -25195}, {-49533, 5540, 7897, 15057, 48926, 30503, 19783, -31949, 6820, -9514, 26031, -22404, -18847, 20124, 25218}, {21756, -54365, -3355, 30573, -1111, -21965, -9471, -31189, 22164, 19597, -19234, 6398, -5539, -28339, -3355}};
    EXPECT_EQ(firstOp1 - secondOp1, result1);
    // Generated test 2
    IntMatrix firstOp2{{-11730, 22308, -7584, -30995, -25230, -19134, -14721, 23769, -16464, -30963, -24077, -2628, -13884, 13884, 13035}, {-7796, 28763, -29214, -13566, 12022, -12897, 6210, 28371, -15398, -32149, -6047, -18814, -2204, 10318, -7083}, {-6115, 2033, -30744, -19496, -8034, 9244, 367, 9463, -7259, 25180, 25373, 24483, -25489, 23678, -23653}, {-9140, 29008, 9350, 2405, -10955, 27903, 4320, -32383, 26653, 24333, -23074, -25791, 9384, -7176, 31554}, {31479, 22716, -5508, -1188, 29391, 8553, -6998, -13701, 10368, -19286, -8821, 18414, 10892, -13721, 4046}, {2048, -19521, -18807, -27000, 25340, 2345, -10211, -29676, 8718, -3185, 9070, 23967, -9853, 3051, 22602}, {-6187, -25330, 21821, 22139, -5252, -1840, 23317, 18953, -17966, 24624, 22301, -17, -30255, -8133, 21626}, {3790, -6633, -28871, 29586, 28137, 11675, 11877, 6496, -3556, 650, 19938, 10895, -8215, 32667, -9200}, {14847, -15044, 28843, 1537, 11495, -15118, -1919, -15641, -28353, 18877, 2300, -32190, -11148, -6317, -16956}, {20426, -6609, -27946, 1649, 23612, 29425, 28903, 8708, -22023, -30021, 13790, -29990, -21917, -32305, 9431}, {13427, -24906, 8373, 23759, -1818, 25376, 1263, 1568, -5743, 21181, -13373, 22406, -6326, -18466, -5174}, {-30250, 18190, 9481, -27297, 18094, 11925, 31971, 28460, 2160, 1329, -32748, 8263, 30356, 2517, -17657}, {-7870, -32314, -17574, -27197, -3651, -18015, -15997, -16969, 10158, 21059, -31466, -27893, -25039, -15786, -5665}, {5886, -2113, 7590, -21978, -13545, -4094, 28354, -30481, -18557, 126, -2742, 31488, -27640, -6618, 20216}, {-27856, -16737, 19418, -1047, 12715, 29182, -21090, -20507, 15165, 17491, 2993, -236, 26199, -29200, 19418}};
    IntMatrix secondOp2{{2155, -9785, -23819, 12771, -19501, -18273, 6395, 20919, 28194, 18852, 2960, -22711, -22692, 8207, -13328}, {-7245, -388, 15366, -163, 6705, -9238, 26414, -10899, 23581, -205, -4736, -17222, 23606, 21013, -11911}, {-8849, -21640, 26527, 2191, 7282, -26635, 3855, 19980, -9079, 25731, 3954, 24255, -14260, 24685, -17647}, {-1311, -23102, -11211, 23581, 12970, 410, -29186, -20548, 11344, 16136, -7058, -7277, 31012, -2123, 630}, {-17345, -15983, 22175, -15519, -20020, 2857, -12564, 22326, -26902, -27742, 24505, -15252, -23153, -32671, -21289}, {29801, 14748, 9369, -24336, -21606, 1072, 1395, 30125, -13854, -740, 7645, -3018, -6701, 15841, 3814}, {3955, 26209, 6025, -15141, 793, 22539, 20710, 727, -14000, -18869, 4215, 30551, -19150, 23838, -15004}, {-5802, -24099, -7586, -20504, -20760, -18579, 32496, -10430, -13492, 937, -26926, 19023, 7460, -3318, 49}, {6467, 4240, 26288, 14368, 20950, 32544, -31184, -2440, 9478, 25535, 5836, -32118, -5751, 5663, 21104}, {23204, 352, 19556, 14988, 13831, -23268, 1233, -19693, -7622, -27121, 23304, -15612, -27492, -11339, 5018}, {3205, 18479, 11917, -18844, -6982, -7915, 19000, 13648, 19837, -25684, 1498, 6789, -20846, -25800, 31434}, {-31494, -17480, -24826, -9710, -13796, 25646, -1334, -4430, -7882, 20011, 17493, 556, 26976, 30957, -11763}, {30103, 22810, 18476, -6959, -6094, 12748, 3863, -20633, -11369, -17160, 2312, -31361, -7319, -6057, 19258}, {27442, -12330, 32388, -9159, 19501, 8567, 18109, -7125, 6117, 16142, -26354, 25298, 12977, 14011, 30314}, {23883, 17264, 14746, 22419, 13970, 2039, -26547, -25098, -26258, -25953, -14467, 11947, -16043, 9552, 14746}};
    IntMatrix result2{{-13885, 32093, 16235, -43766, -5729, -861, -21116, 2850, -44658, -49815, -27037, 20083, 8808, 5677, 26363}, {-551, 29151, -44580, -13403, 5317, -3659, -20204, 39270, -38979, -31944, -1311, -1592, -25810, -10695, 4828}, {2734, 23673, -57271, -21687, -15316, 35879, -3488, -10517, 1820, -551, 21419, 228, -11229, -1007, -6006}, {-7829, 52110, 20561, -21176, -23925, 27493, 33506, -11835, 15309, 8197, -16016, -18514, -21628, -5053, 30924}, {48824, 38699, -27683, 14331, 49411, 5696, 5566, -36027, 37270, 8456, -33326, 33666, 34045, 18950, 25335}, {-27753, -34269, -28176, -2664, 46946, 1273, -11606, -59801, 22572, -2445, 1425, 26985, -3152, -12790, 18788}, {-10142, -51539, 15796, 37280, -6045, -24379, 2607, 18226, -3966, 43493, 18086, -30568, -11105, -31971, 36630}, {9592, 17466, -21285, 50090, 48897, 30254, -20619, 16926, 9936, -287, 46864, -8128, -15675, 35985, -9249}, {8380, -19284, 2555, -12831, -9455, -47662, 29265, -13201, -37831, -6658, -3536, -72, -5397, -11980, -38060}, {-2778, -6961, -47502, -13339, 9781, 52693, 27670, 28401, -14401, -2900, -9514, -14378, 5575, -20966, 4413}, {10222, -43385, -3544, 42603, 5164, 33291, -17737, -12080, -25580, 46865, -14871, 15617, 14520, 7334, -36608}, {1244, 35670, 34307, -17587, 31890, -13721, 33305, 32890, 10042, -18682, -50241, 7707, 3380, -28440, -5894}, {-37973, -55124, -36050, -20238, 2443, -30763, -19860, 3664, 21527, 38219, -33778, 3468, -17720, -9729, -24923}, {-21556, 10217, -24798, -12819, -33046, -12661, 10245, -23356, -24674, -16016, 23612, 6190, -40617, -20629, -10098}, {-51739, -34001, 4672, -23466, -1255, 27143, 5457, 4591, 41423, 43444, 17460, -12183, 42242, -38752, 4672}};
    EXPECT_EQ(firstOp2 - secondOp2, result2);
    // Generated test 3
    IntMatrix firstOp3{{-21467, 29006, 21408, 8433, 19659, 31093, 31999, -21329, -20231, -4919, -30389, -21946, 12596, 12563, -32350}, {2160, 16326, -4965, -18971, -22282, -9551, -15643, -17709, -27754, 25967, 32466, 10945, -17965, -7843, -15587}, {13740, 9565, -2607, -28685, 6642, 12583, 8370, 4090, 15848, 7527, 25803, 15504, 17442, 10759, -2936}, {17220, -23840, -26636, 15259, 13234, 14975, 7454, -7303, -15470, -10259, -4477, -20427, 11388, -16695, 3609}, {16773, -28527, -19495, 11873, -9734, -27061, -18281, 11283, 3558, -10621, 27832, -6360, -10029, 462, -24962}, {-2583, -22555, 13485, -31551, -13692, -22904, 12149, -6099, 25739, 8672, 14369, 27047, -31785, -20231, 9978}, {-6858, 20247, -1914, 14296, 2703, 1368, 1229, 850, 32288, -15708, 8849, -12148, 12470, -27038, -21331}, {25169, 5185, -20126, -10006, -18962, -28075, -23008, 19356, 20815, 29093, 18290, -29893, -507, -12283, 32444}, {-28885, -5897, 22734, -28063, 361, 5323, 15032, 13845, -15546, 25120, -9066, -31804, 27740, -1331, -3668}, {18485, 3446, 29698, -6003, -12659, 27339, 21739, 20570, -21806, 31516, -27997, 32488, 14098, -30410, 8983}, {24576, -31630, -14131, 13378, 24385, -12239, 23265, 11479, -15264, -12544, 15840, 25123, 1311, 2688, -12492}, {-30548, -9338, -2838, 13487, 4984, 30595, 20829, -21329, 8744, 30445, -11592, -22606, 21914, 11617, -12192}, {12715, -12683, 31811, -2980, -11042, -17529, -28417, 31917, -14318, 21516, -15611, -12360, 32689, -2493, -28985}, {11012, -21866, 1804, 28364, 16935, -4459, 28285, -25273, 13728, 17780, 17025, -30153, 21340, 10810, 21064}, {-23082, -27744, 31855, -7344, -8464, 9053, 14275, 27896, -17329, 22989, 30657, -12315, -26582, -28680, 31855}};
    IntMatrix secondOp3{{-22256, -31340, 17977, -13735, 22109, 18848, -22621, 25770, -11670, -20539, 11849, 21918, 22483, -7609, 21373}, {2416, 26339, -11962, -18093, -18997, 20057, -25459, 5891, 31202, 30991, 3507, -32029, 24756, -5573, -4655}, {-1735, 31918, 19788, -22095, -187, -15603, 27060, 2107, -30905, -28872, -27187, 7285, 17746, 1463, -27213}, {-11604, -5780, 5769, -3918, 16879, 346, -3740, 9905, -5051, -18216, 16390, -13996, 3217, -6552, 22689}, {-30931, -5845, -13346, -23627, 31577, -18215, -5738, 404, -14068, -21392, -3168, 9686, -11472, 19650, 2115}, {32203, -15551, -26747, -86, -1800, -31019, 2840, -1285, -18876, -12985, 22860, -2883, -32727, 305, -7572}, {28628, -140, -19975, 564, 5557, -3551, -21826, 105, 26536, -14327, -2143, 1186, 983, 13332, 8876}, {16368, -8898, 32299, -504, -22892, -4329, 19768, 14933, 23741, 12842, -11536, -20807, -5264, -11130, -8229}, {-12156, -26116, -9644, -15961, 1918, 7756, -9869, -28791, 25889, 20764, -32501, -28451, -31035, -4208, 30899}, {-14342, 4901, 24038, 11191, 25438, 19467, -25480, -16718, -15458, -24893, 27503, -18516, 28513, -9224, -29744}, {-7716, 31910, -31815, -19814, 24947, 12445, 10325, 21867, 13836, -26288, 19110, -4423, -31663, -31221, 28679}, {5712, -3734, 28220, -5092, 5295, 1697, 10966, -9345, 6724, 9016, -97, -23667, 32033, -11737, 3738}, {-10145, 11094, -15142, 24071, 29034, 25092, 29635, -13343, 24781, -25183, 28104, 22849, -25382, 25134, 15660}, {6000, 18052, -17881, 9095, -23811, 8701, 23762, -9082, 11057, 9925, -13876, -52, -17651, 13842, 1557}, {20682, 2599, -19451, 21522, -3000, 771, -26827, -3268, -14109, -6485, 28114, 2472, 31658, -4203, -19451}};
    IntMatrix result3{{789, 60346, 3431, 22168, -2450, 12245, 54620, -47099, -8561, 15620, -42238, -43864, -9887, 20172, -53723}, {-256, -10013, 6997, -878, -3285, -29608, 9816, -23600, -58956, -5024, 28959, 42974, -42721, -2270, -10932}, {15475, -22353, -22395, -6590, 6829, 28186, -18690, 1983, 46753, 36399, 52990, 8219, -304, 9296, 24277}, {28824, -18060, -32405, 19177, -3645, 14629, 11194, -17208, -10419, 7957, -20867, -6431, 8171, -10143, -19080}, {47704, -22682, -6149, 35500, -41311, -8846, -12543, 10879, 17626, 10771, 31000, -16046, 1443, -19188, -27077}, {-34786, -7004, 40232, -31465, -11892, 8115, 9309, -4814, 44615, 21657, -8491, 29930, 942, -20536, 17550}, {-35486, 20387, 18061, 13732, -2854, 4919, 23055, 745, 5752, -1381, 10992, -13334, 11487, -40370, -30207}, {8801, 14083, -52425, -9502, 3930, -23746, -42776, 4423, -2926, 16251, 29826, -9086, 4757, -1153, 40673}, {-16729, 20219, 32378, -12102, -1557, -2433, 24901, 42636, -41435, 4356, 23435, -3353, 58775, 2877, -34567}, {32827, -1455, 5660, -17194, -38097, 7872, 47219, 37288, -6348, 56409, -55500, 51004, -14415, -21186, 38727}, {32292, -63540, 17684, 33192, -562, -24684, 12940, -10388, -29100, 13744, -3270, 29546, 32974, 33909, -41171}, {-36260, -5604, -31058, 18579, -311, 28898, 9863, -11984, 2020, 21429, -11495, 1061, -10119, 23354, -15930}, {22860, -23777, 46953, -27051, -40076, -42621, -58052, 45260, -39099, 46699, -43715, -35209, 58071, -27627, -44645}, {5012, -39918, 19685, 19269, 40746, -13160, 4523, -16191, 2671, 7855, 30901, -30101, 38991, -3032, 19507}, {-43764, -30343, 51306, -28866, -5464, 8282, 41102, 31164, -3220, 29474, 2543, -14787, -58240, -24477, 51306}};
    EXPECT_EQ(firstOp3 - secondOp3, result3);
    // Generated test 4
    IntMatrix firstOp4{{-12576, -23405, -6319, 9248, 31368, 13208, 29787, -17005, 11972, 29352, 28604, 23971, -8193, 1781, 268}, {31740, 14278, 868, 4590, -32175, 28488, 0, -9450, -11646, 27072, -16045, -9124, 5252, 9803, 4944}, {24214, 31955, 11037, 23047, 30293, 22107, -29686, -31202, -14448, 29557, -6427, 6033, -8939, 15088, 6433}, {-4024, 27278, -12502, -28072, -28839, -29597, 2396, -6946, -14515, -5241, 26903, 27954, -32531, 26518, -21541}, {5612, 32685, 12766, -21433, -9543, 23445, -10863, 14214, -18882, -2215, 7778, 17303, -12473, -18453, -17439}, {-9092, -9020, 18784, -15031, -25922, 9882, 7939, 22584, -8370, -27181, -4870, -19743, 10621, -19307, 8886}, {22646, 11822, 2096, 14412, -28490, 6257, 1488, -15190, -9786, -9527, -6451, 25142, 13732, -4897, 13712}, {18762, 30478, -14438, 10635, -3855, 30072, 10890, -2212, -18899, -15970, -1373, 10049, 12794, 22935, -11431}, {27925, 8749, -15986, -3571, 3759, 12143, -26947, 23258, 3202, -6628, 16462, -29929, 7747, 19030, -18907}, {12378, 21998, 14019, 1839, -7172, -13739, 9861, -23769, -19798, -12174, -22277, 19774, 7997, 22307, -12323}, {19699, -15488, 25291, -17031, -12649, 19947, -9473, 21606, -20706, -10004, 11002, 20235, 24768, 21914, -1850}, {26153, -24821, 27164, 7654, 16647, 7173, 28194, 2283, -23269, 24345, -3464, 32523, -12868, 22073, -4342}, {-6884, 5329, 4744, -29570, 19418, 27248, 451, 30383, 15514, 8959, -2944, -17330, 19141, 9223, 15367}, {-11246, 12343, 4466, 21158, 985, 17652, -32220, 14938, 19665, 15952, 6125, -10121, 24821, 26544, 1152}, {-29926, 23761, -19004, -10277, 32706, 8931, 26408, 19737, 21831, -2743, 10312, -12071, -18568, 22461, -19004}};
    IntMatrix secondOp4{{-4438, -11066, 3699, -8666, 15284, 20303, 12030, -3929, 5473, 14081, 10892, 18205, -14398, 5815, 1928}, {3390, -6017, 27704, -19837, -3775, -9224, 23146, 125, 17674, -8796, 28254, 30948, 20581, 14822, 24968}, {24423, -30200, -20520, -25139, 24577, -26962, -11806, 15769, 29703, 12109, -15596, -7207, -20539, 29528, -19570}, {-28873, 29870, 32530, -13190, -20761, 17448, -23820, 22672, 22586, -10401, -18175, -29909, -4173, 30299, 32625}, {-13277, -25895, -8325, -24805, 28676, -17249, -2514, -4824, 26285, -9210, -31896, -30359, -20895, 8972, 30426}, {-14893, 20011, -6372, -3251, 29258, 6385, -1889, 8187, 11182, 2681, 7574, -22957, 15792, -16667, 2324}, {31571, 29945, -10416, 3590, 5426, -27581, -10055, -11802, -5679, -7131, 32723, -30745, 14448, -14280, -19571}, {32182, -6204, 3705, -25837, -1625, 4934, -18220, 12111, 10032, 32027, 3929, -11366, -11725, -27085, 2843}, {-15370, -496, 13492, -29800, -2642, 23986, 17424, -4644, 8479, 16854, 31906, -13843, -6228, 4813, 3539}, {23695, 20470, -23773, -24016, 9885, 833, -1395, -11736, 12727, 1694, -24945, 18207, -20151, 6992, -4612}, {-15595, -24118, 24622, 795, 17105, 20145, 25096, -11712, 29590, -26443, 18280, 20688, 1016, 21057, 22042}, {-29476, -27671, 23457, 3239, -25317, -25674, 14550, 22099, 10032, 4561, 12732, 1717, 3705, -18067, 17619}, {-18655, -1198, 19432, -3919, 15402, -24036, -18739, -25618, -19872, 15296, 6231, -6878, 7436, -32126, 8439}, {-12517, -4707, -17564, -15268, -27324, 17467, 1246, -29674, 20710, -29752, 26285, -970, -20828, 22839, 19007}, {-2229, 13221, -3680, -10072, 8893, -5635, 28826, -15353, 7660, -2941, 7917, -25050, -19140, 32350, -3680}};
    IntMatrix result4{{-8138, -12339, -10018, 17914, 16084, -7095, 17757, -13076, 6499, 15271, 17712, 5766, 6205, -4034, -1660}, {28350, 20295, -26836, 24427, -28400, 37712, -23146, -9575, -29320, 35868, -44299, -40072, -15329, -5019, -20024}, {-209, 62155, 31557, 48186, 5716, 49069, -17880, -46971, -44151, 17448, 9169, 13240, 11600, -14440, 26003}, {24849, -2592, -45032, -14882, -8078, -47045, 26216, -29618, -37101, 5160, 45078, 57863, -28358, -3781, -54166}, {18889, 58580, 21091, 3372, -38219, 40694, -8349, 19038, -45167, 6995, 39674, 47662, 8422, -27425, -47865}, {5801, -29031, 25156, -11780, -55180, 3497, 9828, 14397, -19552, -29862, -12444, 3214, -5171, -2640, 6562}, {-8925, -18123, 12512, 10822, -33916, 33838, 11543, -3388, -4107, -2396, -39174, 55887, -716, 9383, 33283}, {-13420, 36682, -18143, 36472, -2230, 25138, 29110, -14323, -28931, -47997, -5302, 21415, 24519, 50020, -14274}, {43295, 9245, -29478, 26229, 6401, -11843, -44371, 27902, -5277, -23482, -15444, -16086, 13975, 14217, -22446}, {-11317, 1528, 37792, 25855, -17057, -14572, 11256, -12033, -32525, -13868, 2668, 1567, 28148, 15315, -7711}, {35294, 8630, 669, -17826, -29754, -198, -34569, 33318, -50296, 16439, -7278, -453, 23752, 857, -23892}, {55629, 2850, 3707, 4415, 41964, 32847, 13644, -19816, -33301, 19784, -16196, 30806, -16573, 40140, -21961}, {11771, 6527, -14688, -25651, 4016, 51284, 19190, 56001, 35386, -6337, -9175, -10452, 11705, 41349, 6928}, {1271, 17050, 22030, 36426, 28309, 185, -33466, 44612, -1045, 45704, -20160, -9151, 45649, 3705, -17855}, {-27697, 10540, -15324, -205, 23813, 14566, -2418, 35090, 14171, 198, 2395, 12979, 572, -9889, -15324}};
    EXPECT_EQ(firstOp4 - secondOp4, result4);
    // Generated test 5
    IntMatrix firstOp5{{22276, 4805, 11783, -15897, -6229, -3184, -15763, 13732, -22707, -1397, -16620, -26322, -4295, 3967, 12438}, {-27297, -22227, -19024, 18589, -25994, -28660, -7808, 29106, -1055, 8050, 8246, 27144, 27528, -28001, 10376}, {14632, -27850, 28242, 311, 8240, 7002, 32000, 19819, 24682, 7418, 14056, 11643, 3055, -17680, 7665}, {-7780, -1796, -1170, -27659, -20664, -16838, -21354, -14218, 1484, -28823, -16846, 29842, -28874, 24087, 26619}, {-15463, 3957, -23168, -22951, -21941, 23626, 27421, 15450, 28550, -2745, -12142, 11045, 7975, -828, -3806}, {-1660, 1409, 5124, -7997, -30048, 29020, 29475, -29948, -9303, 23716, -2182, 23666, -8265, -11661, -6037}, {-8088, 28959, -32498, 17757, 14560, -10953, 8539, -20055, 2289, 31692, -18772, 15013, 31080, 18495, 30784}, {11428, -6801, 1305, -28853, -3635, -2169, -4309, -10688, 23226, -31830, -13518, -8510, 1729, 27394, 2097}, {-8705, 17385, -15960, 5190, 24066, 25713, -32220, -16397, 11475, -14993, 15479, 24478, -30247, -31294, 19001}, {-18535, 26015, -5422, 11018, 11468, 2171, 12376, 8371, -24399, 28320, 15259, -19186, 19865, -31650, 15886}, {11890, 6697, 473, 32484, -21879, -7718, -29539, 15017, -23624, 23695, -12627, -18229, -10438, 27180, 10201}, {-32493, 11695, 24672, -29142, -21462, 12051, 4709, -12409, -21006, 18937, 28754, -9377, 27540, -22907, 18518}, {-19028, -26089, 3366, -19560, 17918, -27504, -28697, -27914, -13994, -23211, -18181, -30436, -4434, 839, 11205}, {4171, 29792, -13928, 16439, 14213, 18595, -13119, 3692, 25553, -20311, 10486, -21424, 16253, 23789, -30609}, {-31204, 7071, 24322, 18284, 18411, -29310, 17190, -4462, -12319, 1781, -14781, 3919, 9388, 25196, 24322}};
    IntMatrix secondOp5{{9490, 5916, -16522, -9567, 23856, 20650, -11804, -24139, 26158, 5319, -2976, 22711, -31385, -7797, 31734}, {-16562, -27184, 18262, -24773, 20239, -16887, -16766, 2771, 3355, 22521, -32668, 12623, -9790, -12230, -27504}, {32054, -28175, -29957, -15106, -25608, -24537, -24291, 3059, -2727, 3465, -10276, 10104, -22864, -30365, -21739}, {84, -23441, 6633, -713, -29770, -11105, 28692, 22384, 28754, -11163, 24790, -4482, -15702, 18258, -22736}, {8959, -10923, 17545, 9173, 7349, -23509, 3722, 18325, 31622, -29290, 5244, -24835, 4806, -14755, -2147}, {940, -6748, 17852, -20062, -7644, -11102, 11723, 20304, -26641, -9553, -16705, -1443, 13284, -7705, 3796}, {-26716, 4119, -17195, -29494, -15909, 10024, 21965, 29049, 3999, 30201, -15140, 7117, 23245, -21919, -17932}, {-18851, 23307, -15885, 1817, 29052, -21636, -17122, -10441, 10330, 16115, -15539, 28731, 25453, 32082, 2024}, {-6149, -12450, 10178, -4067, -14348, -18778, 7267, 18611, -26763, 7111, 9185, 16858, 1432, -27805, 14403}, {-19076, 17305, -31184, -31213, -31401, 12128, -29067, 1546, 10676, -8502, -17389, -4725, -2530, 21957, 23817}, {-31527, 20212, 30853, 17970, -3698, 17323, -29291, -5333, -13191, 623, 26904, 215, -15765, 3585, -31937}, {-30010, 17831, -5923, 1745, 5353, 22362, -24197, -8265, 22858, -20397, -26249, -15895, -10211, -11955, 8741}, {-18502, -27298, -13242, -16588, -23684, -845, -19107, 245, -7399, 26458, -31188, 24941, -16225, -18434, -8163}, {-14543, 25871, -13743, -5574, 28345, -13208, -9918, 25672, -3606, -28129, 28241, 22642, -2687, -13156, -11077}, {-29538, -202, -10474, -16744, 16503, 26942, -32614, 16316, 9879, -20288, 32072, 10928, -29202, -2074, -10474}};
    IntMatrix result5{{12786, -1111, 28305, -6330, -30085, -23834, -3959, 37871, -48865, -6716, -13644, -49033, 27090, 11764, -19296}, {-10735, 4957, -37286, 43362, -46233, -11773, 8958, 26335, -4410, -14471, 40914, 14521, 37318, -15771, 37880}, {-17422, 325, 58199, 15417, 33848, 31539, 56291, 16760, 27409, 3953, 24332, 1539, 25919, 12685, 29404}, {-7864, 21645, -7803, -26946, 9106, -5733, -50046, -36602, -27270, -17660, -41636, 34324, -13172, 5829, 49355}, {-24422, 14880, -40713, -32124, -29290, 47135, 23699, -2875, -3072, 26545, -17386, 35880, 3169, 13927, -1659}, {-2600, 8157, -12728, 12065, -22404, 40122, 17752, -50252, 17338, 33269, 14523, 25109, -21549, -3956, -9833}, {18628, 24840, -15303, 47251, 30469, -20977, -13426, -49104, -1710, 1491, -3632, 7896, 7835, 40414, 48716}, {30279, -30108, 17190, -30670, -32687, 19467, 12813, -247, 12896, -47945, 2021, -37241, -23724, -4688, 73}, {-2556, 29835, -26138, 9257, 38414, 44491, -39487, -35008, 38238, -22104, 6294, 7620, -31679, -3489, 4598}, {541, 8710, 25762, 42231, 42869, -9957, 41443, 6825, -35075, 36822, 32648, -14461, 22395, -53607, -7931}, {43417, -13515, -30380, 14514, -18181, -25041, -248, 20350, -10433, 23072, -39531, -18444, 5327, 23595, 42138}, {-2483, -6136, 30595, -30887, -26815, -10311, 28906, -4144, -43864, 39334, 55003, 6518, 37751, -10952, 9777}, {-526, 1209, 16608, -2972, 41602, -26659, -9590, -28159, -6595, -49669, 13007, -55377, 11791, 19273, 19368}, {18714, 3921, -185, 22013, -14132, 31803, -3201, -21980, 29159, 7818, -17755, -44066, 18940, 36945, -19532}, {-1666, 7273, 34796, 35028, 1908, -56252, 49804, -20778, -22198, 22069, -46853, -7009, 38590, 27270, 34796}};
    EXPECT_EQ(firstOp5 - secondOp5, result5);
    // Generation done by ./generateTestcases.py
}

TEST(TEST09, StressMultiplication10_10) {
    // Generated test 1
    IntMatrix firstOp1{{74, -169, 102, -172, 63, 29, 2, 126, 16, -28}, {98, 20, 217, -150, 208, 164, -109, -204, 35, 220}, {35, -69, 223, -224, 14, -226, -192, -208, 166, 225}, {7, -91, -256, -243, 253, 88, 193, -212, 231, -62}, {52, -144, -34, -60, -98, -192, 240, -81, -6, 187}, {-182, 166, -162, -91, 61, 69, -11, -251, 214, 6}, {68, -13, -60, -30, 245, 62, -62, -156, -19, -23}, {-185, -130, -227, -95, -27, -153, -99, 103, -142, 243}, {154, -184, 136, 22, 228, -160, -56, 124, -66, -226}, {-92, -214, -167, 193, -16, -121, 160, 194, 7, -102}};
    IntMatrix secondOp1{{-128, -41, 176, 29, 143, 155, -211, 2, 53, -13}, {79, -45, 97, -184, -161, -6, 202, -188, 40, 35}, {176, 199, 148, 74, -78, 42, 92, -40, 149, 138}, {69, 83, -103, 103, -249, 106, -160, -190, 189, -161}, {-25, -117, 63, -135, 235, -143, -252, -17, 57, 229}, {-211, -103, 225, -190, -48, 217, 132, 65, 120, -56}, {-80, -166, -6, -238, 71, 65, 180, -233, 253, 134}, {-235, 138, -12, 162, 3, -212, -172, 30, -256, 142}, {26, -216, -44, 208, -48, -200, 68, -159, -4, 144}, {-246, 143, -123, 10, -224, -186, 202, 195, 40, -147}};
    IntMatrix result1{{-46899, 9831, 41153, 32043, 92100, -28754, -50776, 56644, -46011, 72274}, {-19476, -1571, 91260, -57096, 12915, 2371, 58846, 79992, 74820, 21096}, {74403, 48582, -25756, 96969, -3990, -103017, 59627, 87731, -23328, 15395}, {-39163, -226026, 14133, -110751, 167225, -29141, 17717, -25197, 37338, 91664}, {-31517, 863, -76247, -602, 9595, -27324, 60262, 8191, 40924, -20133}, {49488, -132221, -18241, -72000, -19584, -30825, 122282, -42177, 28271, 3394}, {5216, -62105, 40211, -62719, 79760, 20457, -61516, 18847, 33285, 18029}, {-79894, 75364, -129390, 37829, -17501, -121908, -2407, 137834, -127809, -70600}, {48486, 29006, 35032, 67700, 147008, -8998, -220794, -5804, -35668, 101778}, {-28390, -5363, -100828, 63163, 22769, -36657, -106696, -49998, -30566, 7689}};
    EXPECT_EQ(firstOp1 * secondOp1, result1);
    // Generated test 2
    IntMatrix firstOp2{{133, 9, -253, 186, -168, -226, 135, -184, 70, 115}, {-219, -89, 240, 73, -132, 218, -61, 133, 149, 98}, {78, 20, 88, 5, 169, -110, 1, 107, 91, -194}, {-251, -113, 5, 98, -126, -80, -69, -195, -33, 139}, {-14, 15, -159, -85, 69, -135, -3, -31, -142, -23}, {-105, 137, -57, 230, -53, -160, -131, -29, -94, -47}, {-121, 62, 70, 22, 149, 23, 139, 177, 226, 141}, {63, 47, 61, -248, 18, -152, 125, -106, -56, 13}, {-85, 45, 13, 150, -158, -159, 193, -153, 220, -152}, {164, -255, 94, 119, -106, 126, -30, 96, 10, 75}};
    IntMatrix secondOp2{{-230, 251, -119, -104, 237, -195, -115, 91, -227, -76}, {-218, -157, -222, -55, -215, 104, -16, 230, -127, 250}, {-46, 145, -89, -183, -230, 141, 104, 223, -245, 179}, {135, 112, -25, 22, 72, -158, -92, -61, 138, -217}, {-242, -246, -112, -190, 157, 5, 231, 193, 154, -88}, {236, 119, 93, -3, 81, -172, -221, 144, -256, 52}, {144, -52, 136, -85, -185, -29, 162, 232, -43, -16}, {-68, 97, -184, -25, -46, 250, -256, 86, -132, -135}, {63, 218, 158, -205, 237, 50, 9, -190, -15, -193}, {-84, 187, 81, -163, 213, 18, 60, 125, -207, 127}};
    IntMatrix result2{{18218, 42448, 70431, 28692, 81060, -96373, 28779, -101989, 81931, -66700}, {135306, 127275, 56404, -34876, -24424, 61832, -70526, -4190, -101300, 11175}, {-77634, -31019, -71725, -46779, -12933, 46032, 24700, 15688, 37696, -63515}, {96545, -8611, 91273, 52588, -12027, -10353, 57536, -98665, 85132, 28834}, {-58107, -109591, -24674, 49042, -12767, 3689, 43220, -13476, 84796, 10424}, {-15844, -61653, -58679, 68217, -52671, 8604, -11552, -58956, 105539, -3355}, {-6192, 24168, 12771, -117084, 18471, 87283, 35215, 71741, -39381, -31294}, {-80662, -59572, -4603, -27334, -65298, 33931, 106575, 59009, -20989, 86978}, {94928, 4891, 74975, 4879, -68598, -9637, 58542, -86208, 87528, -51074}, {68481, 176304, 35254, -11978, 93684, -59530, -93130, -23566, -87088, -74216}};
    EXPECT_EQ(firstOp2 * secondOp2, result2);
    // Generated test 3
    IntMatrix firstOp3{{-182, -256, 193, -134, 92, -215, 9, 51, 69, 239}, {-163, -64, 98, -53, 240, -213, -109, -24, 88, -227}, {-208, -150, -250, 101, 59, 99, -177, 161, 223, 88}, {235, -232, 254, -154, -23, -26, 52, 212, -91, -140}, {91, -193, -167, -78, -173, -200, 94, 149, 143, 36}, {152, -65, -129, -11, 228, 142, -35, 200, 208, -2}, {-91, -173, -107, -78, 102, 3, -127, 254, 71, 32}, {139, 24, 170, 114, -62, -246, 44, -125, 77, 83}, {-193, 69, 194, 31, 192, 63, 110, 124, -174, 73}, {-209, -44, -150, -197, 68, -233, -93, -146, 44, 129}};
    IntMatrix secondOp3{{123, -86, -68, -225, -23, -85, 32, -4, -133, -79}, {-151, 49, -151, 92, 80, -26, -66, -140, 226, 108}, {-133, -174, 153, 71, -102, -53, 84, 101, -73, -255}, {83, 197, 221, -162, 249, -49, -231, -230, 22, -198}, {-4, 165, 9, 242, 131, -174, -222, 233, -10, 30}, {-65, -188, 217, -166, 221, 68, -49, 156, -249, -179}, {-50, -103, 78, -102, -195, -41, -11, -12, -69, -100}, {199, -250, -66, 88, 126, 155, 57, -101, 242, -143}, {-164, 126, 72, -34, 140, 227, 96, 97, -135, 47}, {-187, 56, 152, 220, 127, 27, -212, 173, 103, 39}};
    IntMatrix result3{{-53224, 7129, 43752, 164567, -60125, 17487, 7113, 117558, 28951, 9663}, {13758, 78636, -55118, 95843, -38475, -28726, 33043, 27389, 15984, 46411}, {19889, 76065, 47879, 40732, 170238, 111556, -45160, 25261, 19129, 36623}, {99847, -182681, -19737, -46841, -110926, -11334, 118578, 28116, -53332, -119188}, {64532, -21434, -51525, -39536, -61748, 79132, 81401, -39858, 20259, 38024}, {42425, -5353, 8919, -2295, 123864, 45727, -24538, 73319, -40840, -17935}, {61352, -20814, -16423, 73716, 64543, 65740, 10652, 44244, 41275, 14720}, {-38661, 59186, 14030, -9479, -55728, -34434, -1185, -31863, 3777, -11806}, {-28189, -48000, 53601, 116199, 16050, -49131, -73628, 40047, 63603, -72489}, {-56334, 116980, -70422, 142897, -52769, 3490, -4979, 59099, 60238, 170039}};
    EXPECT_EQ(firstOp3 * secondOp3, result3);
    // Generated test 4
    IntMatrix firstOp4{{160, 185, 142, 63, 29, -162, 235, -21, 228, -174}, {-43, -253, 77, -238, 68, -233, -125, 96, 95, 102}, {-117, -241, 198, 27, 83, 129, -43, 176, -85, 91}, {-93, -55, 254, -121, -254, 50, 63, -198, -95, -231}, {68, 111, 115, -147, -171, -8, -35, -52, 227, 83}, {246, 42, -183, -32, -124, 87, -74, -31, 98, 94}, {-38, -210, -88, 254, 149, -124, 54, 198, 106, 23}, {97, -237, -202, -102, 239, -137, 15, -140, 248, -61}, {252, -204, -124, 90, -159, -110, -134, -131, 250, 116}, {-26, 47, -231, 58, -10, 1, -3, 28, 163, -90}};
    IntMatrix secondOp4{{-3, -90, 43, -172, -225, 194, -179, -89, -153, -255}, {113, 59, -37, 204, 74, 130, 190, -174, 250, -154}, {156, -131, -52, 152, -73, -6, 22, 245, -146, -6}, {-118, 5, -236, -189, -75, 189, -106, 127, -214, -53}, {-222, -104, -136, -222, 161, -125, 75, -26, 231, 132}, {23, 154, -77, 207, -24, 14, -215, -116, 143, 227}, {-245, 184, -48, 206, -169, 190, 13, -193, -218, -21}, {-98, 6, 152, -144, -213, -74, -106, -171, -182, 5}, {233, -111, 114, 212, 38, 172, -80, 90, -190, -122}, {200, -146, 91, 148, -9, -105, -107, 70, 47, -109}};
    IntMatrix result4{{-12214, -6526, -18001, 53943, -53856, 163942, 45620, -19025, -127817, -120317}, {54933, -113149, 109073, -55195, 23091, -123662, 11429, 85147, -38070, -1439}, {-22957, -28965, -6596, -34524, -31991, -104051, -67015, 64087, -41646, 106803}, {41138, 60037, -20893, 120153, -4710, 17402, 48935, 62493, -32740, 49352}, {168565, -42886, 78608, 153203, -6925, 47939, -6059, 31401, -30766, -87987}, {71567, -7959, 54823, 13933, -36548, 60172, -80267, -49986, -2203, -83826}, {-106582, -34764, -18267, -147944, -40130, 4926, -55350, 28000, -138374, 5033}, {-47128, -59417, 26282, -91077, 62058, 420, -6923, 18934, -14930, -5792}, {106114, -88554, 59262, -46862, -33448, 73511, -104679, 89895, -132165, -123813}, {-17278, 31521, 11542, -13001, 21754, 49522, -5028, -50788, -4767, -13262}};
    EXPECT_EQ(firstOp4 * secondOp4, result4);
    // Generated test 5
    IntMatrix firstOp5{{-244, -200, -58, -248, 164, -241, 214, -38, -104, -23}, {153, -94, -98, -40, -130, -205, 144, -10, 214, 24}, {88, 136, -108, -173, -128, 130, 40, 120, -112, -67}, {108, -61, 125, 173, -203, -50, -199, 170, 23, 18}, {55, 40, -97, 26, 165, 151, -21, 32, -62, 106}, {185, -11, 21, 46, 97, -241, 24, -200, 110, -152}, {131, 10, 122, 230, 231, -85, -255, -33, -171, -158}, {0, -141, -95, -44, 14, 115, -206, -228, -3, -33}, {88, -39, -70, -132, -240, 170, -221, 8, 211, -77}, {119, 30, -206, 132, 4, -103, 189, 185, 131, -52}};
    IntMatrix secondOp5{{-235, 108, 177, 211, 166, 169, -46, 92, -128, -181}, {-113, 38, 53, -148, -121, -68, 218, -46, -208, -116}, {-48, 191, -54, 206, -77, -234, -13, 96, -255, 183}, {189, 46, -86, 176, 247, 55, 213, -76, 47, -222}, {71, -221, -22, 253, -28, 37, -130, -218, -164, -46}, {203, -101, -71, 21, -38, 107, -211, 85, 101, -195}, {-94, -186, -136, 96, -161, -254, 205, -83, 226, 112}, {-116, -214, -110, -179, -163, 213, 202, -126, -117, 197}, {-175, 54, 102, 68, -98, 247, -226, -139, 149, -105}, {22, -83, 250, -206, 138, 78, -27, -247, -190, -79}};
    IntMatrix result5{{559, -103720, -57107, -16037, -89770, -137355, 5404, -49042, 66413, 180476}, {-128332, 26749, 57590, 6994, 6654, 42260, 3867, -23419, 84733, 9904}, {-45813, -32363, -9734, -95364, -61889, 13065, 38926, 57251, 5021, 12649}, {-20996, 91474, 17481, -16073, 70558, 83645, 41759, 39052, -61495, -1550}, {45937, -76675, 20018, 1399, 26692, 58069, -27013, -51056, -39080, -73065}, {-78232, 85485, 34005, 149461, 45208, -25951, -19378, 19877, 9260, -32299}, {59092, 64316, -20330, 150778, 106102, 8193, 15434, 36359, -134845, -52280}, {82127, 49449, 37508, 27141, 74816, 42666, -151677, 61827, 46747, -79396}, {-39164, 81629, 53299, -62900, -4654, 139903, -133722, 86997, 60211, -56268}, {-80439, -73117, -16042, 4963, -12206, 82362, 100986, -74229, 76671, -24154}};
    EXPECT_EQ(firstOp5 * secondOp5, result5);
    // Generation done by ./generateTestcases.py
}

TEST(TEST10, StressMultiplication8_4) {
    // Generated test 1
    IntMatrix firstOp1{{-188, -131, 213, -98}, {-202, 236, 114, -222}, {180, -139, -161, 135}, {-116, -163, -77, 21}, {-52, 109, 65, -50}, {20, -107, 169, 10}, {102, 48, -50, 238}, {61, -175, 79, -113}};
    IntMatrix secondOp1{{57, -88, 228, 134, -106, -250, -132, -30}, {59, -49, 133, 163, 82, 198, 140, 16}, {-221, -51, 121, 102, -41, -184, 41, -194}, {-118, 249, -25, 249, -68, -139, -110, -189}};
    IntMatrix result1{{-53954, -12302, -32064, -49221, 7117, -4508, 25989, -19256}, {3412, -54880, 4676, -32250, 51186, 107110, 88798, 29678}, {21710, 32797, -303, 18656, -33057, -61663, -64671, -1905}, {-1690, 27351, -57969, -44738, 659, 7975, -12975, 11841}, {-4998, -16530, 11756, 4979, 15185, 29572, 30289, 144}, {-43702, -2646, 10528, 4967, -18503, -58672, -11791, -36988}, {-8388, 50484, 17640, 75654, -21010, -39878, -34974, -37574}, {-10973, -28959, 3017, -40430, -16371, -48729, -16883, 1401}};
    EXPECT_EQ(firstOp1 * secondOp1, result1);
    // Generated test 2
    IntMatrix firstOp2{{-182, 36, -217, -135}, {181, -51, -119, 23}, {147, 157, 246, 131}, {11, 253, -48, -131}, {-158, -103, 110, 207}, {30, -186, -75, 44}, {28, -222, -132, -208}, {-1, 214, 138, 190}};
    IntMatrix secondOp2{{-149, 242, 185, -130, 161, 202, 237, -129}, {22, -204, -143, -215, -123, 169, -162, 66}, {112, -65, 101, 74, -186, 138, -20, 33}, {246, 6, 192, 196, -226, 174, -209, 248}};
    IntMatrix result2{{-29604, -38093, -86655, -26598, 37142, -84116, -16411, -14787}, {-35761, 62079, 33175, -16863, 52350, 15523, 48732, -24938}, {41329, -11658, 54742, -8985, -71006, 112969, -22894, 32005}, {-33675, -46616, -64144, -85053, 9186, 15561, -10040, -18793}, {84518, -23132, 36353, 91397, -80011, 1875, -66223, 68550}, {-6138, 50343, 33021, 39164, 31714, -28068, 29546, -7709}, {-75008, 59396, -16342, -6446, 103374, -86270, 88712, -74204}, {67053, -51728, 19631, 1572, -95091, 88068, -77375, 65927}};
    EXPECT_EQ(firstOp2 * secondOp2, result2);
    // Generated test 3
    IntMatrix firstOp3{{234, 144, -152, 233}, {49, -47, 95, -138}, {86, -107, 220, -99}, {113, 225, -110, -139}, {-158, 63, -240, 157}, {-188, 209, -142, -200}, {-9, 194, 209, -64}, {39, 182, -190, -92}};
    IntMatrix secondOp3{{12, 159, 15, 182, -53, 136, 39, -242}, {248, 192, 157, 23, 252, 101, -166, -105}, {46, 158, 185, 44, 204, -66, -180, -169}, {216, 217, -224, 68, 73, 82, -195, -251}};
    IntMatrix result3{{81856, 91399, -54194, 55056, 9887, 75506, -32853, -104543}, {-36506, -16169, 41843, 2633, -5135, -15669, 19523, 11660}, {-36768, 6407, 47367, 16139, 6131, -21749, 821, -21908}, {22072, 13624, 47806, 11449, 18124, 33955, 13962, 2508}, {36600, -16877, -72047, -27191, -13249, 13589, -4035, 32774}, {-156, -55600, 48523, -49257, 19064, -11487, 22534, 97749}, {43794, 54951, 83324, 7668, 87329, -672, -57695, -37449}, {16992, -8839, 14617, -3332, -1679, 28682, 23449, 26654}};
    EXPECT_EQ(firstOp3 * secondOp3, result3);
    // Generated test 4
    IntMatrix firstOp4{{62, -18, -2, -92}, {68, 155, -240, -119}, {189, 55, 5, -59}, {90, 174, -198, 247}, {-234, -9, 83, 155}, {-62, -172, -145, -235}, {-146, -123, -88, 59}, {-36, -138, 162, 196}};
    IntMatrix secondOp4{{160, 195, -132, -105, -34, 44, -63, -53}, {-24, 76, 62, 138, 186, -45, -120, 200}, {3, 249, -190, -139, -60, 134, -186, 107}, {62, 82, -155, -42, -24, 54, -64, 142}};
    IntMatrix result4{{4642, 2680, 5340, -4852, -3128, -1698, 4514, -20164}, {-938, -44478, 64679, 52608, 43774, -42569, 29372, -15182}, {25277, 37442, -13343, -10472, 4920, 3325, -15661, -6860}, {24944, 1726, -1757, 31710, 35256, -17064, -5530, 43918}, {-27365, -12937, -9465, 5281, -2418, 9601, -9536, 41493}, {-20797, -80537, 61495, 12799, -15544, -27108, 66556, -79999}, {-17014, -54892, 19221, 8110, -14050, -9495, 36550, -17900}, {10190, 38902, -64964, -46014, -38868, 36918, -23848, 19474}};
    EXPECT_EQ(firstOp4 * secondOp4, result4);
    // Generated test 5
    IntMatrix firstOp5{{-131, 143, -73, 85}, {77, 185, 21, -143}, {107, 52, -7, 73}, {111, -230, 247, 172}, {218, 82, -228, -207}, {-150, 247, -44, 129}, {55, -224, -63, 150}, {121, 246, -54, -128}};
    IntMatrix secondOp5{{-69, 137, -1, -146, -28, -175, 7, 37}, {22, -211, 150, 201, 142, 176, 192, -143}, {-172, -82, 130, -113, -53, -74, 27, 157}, {-232, -23, 217, 83, -206, 238, 119, 202}};
    IntMatrix result5{{5021, -44089, 30536, 63173, 10333, 73725, 34683, -19587}, {28321, -26919, -628, 11701, 52459, -16503, 19609, -49195}, {-21971, 2582, 22624, 1680, -10279, 8319, 19231, 10170}, {-95107, 39527, 34823, -76071, -84291, -37247, -16246, 110520}, {74002, 36021, -62477, -6763, 60266, -56112, -13519, -81270}, {-6576, -72026, 59473, 87226, 15032, 103680, 60537, -21721}, {-32687, 56515, -9295, -33485, -60909, -8687, -26474, 54476}, {36047, -27957, 1983, 27258, 60774, -4347, 31389, -65035}};
    EXPECT_EQ(firstOp5 * secondOp5, result5);
    // Generation done by ./generateTestcases.py
}